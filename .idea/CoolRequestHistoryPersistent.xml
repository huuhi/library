<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;50b448d7a29eb8f85ee3d9b3c2d8446a&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/books/page&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookController&quot;,&quot;methodName&quot;:&quot;getBooksByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/books/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;token&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjksImV4cCI6MTc0MDQ5NzYyMH0.6vPDnogj4Bg5m-U7h6cxtqtkzbucndq5SAUDCxy83vk&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;author&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,28,11,52,39,124160500],&quot;historyId&quot;:&quot;798b8263-17c9-4b30-b6ea-9bf4ee285179&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;5f2984eefc2eba9f9711b1bcfd46c5df&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/class&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookClassController&quot;,&quot;methodName&quot;:&quot;getClazz&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/class&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;token&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEzLCJleHAiOjE3NDA3MTgwODd9.FbrFW36xkFFo-LMxjpaqEZRgCBT8v0dW5RWQw1aPwHU&quot;}],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,28,11,1,45,865959800],&quot;historyId&quot;:&quot;1e4b5139-7706-4f87-b9a2-abc0a7d0d331&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,27,17,18,20,363266900],&quot;historyId&quot;:&quot;9661d0ba-d80b-4e71-82a5-4ae979f05cb2&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8081/api/login&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;password\&quot;: \&quot;password\&quot;,\n    \&quot;username\&quot;: \&quot;username\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,18,50,34,425641500],&quot;historyId&quot;:&quot;49a3c022-75e3-4c1c-bc2e-a002d96f32f3&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;{\n    \&quot;password\&quot;: \&quot;password\&quot;,\n    \&quot;username\&quot;: \&quot;username\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,18,49,10,407106000],&quot;historyId&quot;:&quot;4d488bb4-4e60-4f08-b05c-8d8d1e30bcfb&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,18,39,53,528988900],&quot;historyId&quot;:&quot;19426ccf-344c-4321-ab49-dda13c48f609&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;{\n    \n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,18,39,47,625670400],&quot;historyId&quot;:&quot;ed14fe00-ea1c-4130-b629-e303ecbd64f9&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,18,39,21,621471600],&quot;historyId&quot;:&quot;bd75969c-5bd4-41d8-a80b-e0ff6c09ca93&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,55,11,94058800],&quot;historyId&quot;:&quot;a5abf2e4-9269-4804-a9db-8319ac0a2474&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123\&quot;,\r\n  \&quot;username\&quot; : \&quot;小胡\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,55,6,463077600],&quot;historyId&quot;:&quot;d3c83776-7858-4303-825e-8ffe286a14c6&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,54,50,214019800],&quot;historyId&quot;:&quot;aa05587e-c082-42ff-9b70-1e036c3ceecd&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,54,36,909249500],&quot;historyId&quot;:&quot;6fb4e184-9316-481b-a499-393d11cd7aef&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;50b448d7a29eb8f85ee3d9b3c2d8446a&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/books/page&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookController&quot;,&quot;methodName&quot;:&quot;getBooksByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/books/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;token&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjksImV4cCI6MTc0MDQ5NzYyMH0.6vPDnogj4Bg5m-U7h6cxtqtkzbucndq5SAUDCxy83vk&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;author&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,25,12,284752600],&quot;historyId&quot;:&quot;ecee8fde-f6c6-4931-978a-3fbce9209080&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;password\&quot;: \&quot;123\&quot;,\n  \&quot;username\&quot;: \&quot;小胡\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,16,10,635851400],&quot;historyId&quot;:&quot;ca697fec-f1bd-44e3-b88b-68a30b6d64c5&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,14,7,10,179348300],&quot;historyId&quot;:&quot;f87c0214-848e-4ab4-b249-07563fc5d5bb&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;4801f31c6ef24bd18b25852b1496fd60&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;update&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;image\&quot; : \&quot;\&quot;,\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;address\&quot; : \&quot;\&quot;,\r\n  \&quot;gender\&quot; : 23560,\r\n  \&quot;phone\&quot; : \&quot;\&quot;,\r\n  \&quot;cardId\&quot; : \&quot;\&quot;,\r\n  \&quot;name\&quot; : \&quot;\&quot;,\r\n  \&quot;id\&quot; : 29275,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,26,13,30,49,643612800],&quot;historyId&quot;:&quot;2a5ef490-2cb1-4719-882c-d15dac5cec42&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,45,46,865084900],&quot;historyId&quot;:&quot;187e7df7-69c8-4538-8956-38ed79c1c521&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,40,16,477517900],&quot;historyId&quot;:&quot;c2efa88f-cd27-48f9-94a7-dcf290304ba9&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,38,51,475298800],&quot;historyId&quot;:&quot;b5024909-5a7d-4164-bbab-6bce3731cf13&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,36,42,355855400],&quot;historyId&quot;:&quot;700b1cdc-fe11-4cd1-b5eb-5dd84b1208c8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;50b448d7a29eb8f85ee3d9b3c2d8446a&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/books/page&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookController&quot;,&quot;methodName&quot;:&quot;getBooksByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/books/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[{&quot;key&quot;:&quot;token&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjksImV4cCI6MTc0MDQ5NzYyMH0.6vPDnogj4Bg5m-U7h6cxtqtkzbucndq5SAUDCxy83vk&quot;}],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;author&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,34,17,455960900],&quot;historyId&quot;:&quot;2120a706-ebc4-4d9e-82cb-d671bbea4d52&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;50b448d7a29eb8f85ee3d9b3c2d8446a&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/books/page&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookController&quot;,&quot;methodName&quot;:&quot;getBooksByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/books/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;author&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,34,4,116891500],&quot;historyId&quot;:&quot;5a09147f-4ccb-4232-8a05-06ad51df30ca&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;小胡&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;123&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,33,39,869559600],&quot;historyId&quot;:&quot;80dbf852-90d7-40ad-83ee-e44142f069c9&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;50b448d7a29eb8f85ee3d9b3c2d8446a&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/books/page&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookController&quot;,&quot;methodName&quot;:&quot;getBooksByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/books/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;author&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,21,33,24,718138400],&quot;historyId&quot;:&quot;2e70c7e1-3128-4984-9359-93c9b2e9208c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;50b448d7a29eb8f85ee3d9b3c2d8446a&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/books/page&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.BookController&quot;,&quot;methodName&quot;:&quot;getBooksByPage&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/books/page&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;name&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;author&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,25,15,51,43,289181000],&quot;historyId&quot;:&quot;a1f5b532-862c-4ded-bb0f-9c92966cf3bf&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;f4b9be564b5917363e2a601253250e10&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/list&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;list&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/list&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;10&quot;},{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;role&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,18,50,17,380608600],&quot;historyId&quot;:&quot;00b8e084-0b79-410c-8544-24fe645d5340&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;f4b9be564b5917363e2a601253250e10&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/list&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;list&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/list&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;10&quot;},{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;role&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,18,45,43,296281000],&quot;historyId&quot;:&quot;2382d3a4-6b02-4b43-a02b-35c789b29d05&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;f4b9be564b5917363e2a601253250e10&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/list&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;list&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/list&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;10&quot;},{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;role&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,18,42,47,285109700],&quot;historyId&quot;:&quot;13ff0b25-0b60-4b20-9ba4-6a1b16dc7b6b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;f4b9be564b5917363e2a601253250e10&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/list&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;list&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/list&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;page&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;pageSize&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;role&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,18,42,11,611617100],&quot;historyId&quot;:&quot;d0fd8ff5-8016-459d-a30b-64c6f4c8eeaa&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;b9747f5432b1bdb5af2f4865278aec88&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/status/{status}&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;updateStatus&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/status/{status}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;status&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;0&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;3&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,17,38,24,910421900],&quot;historyId&quot;:&quot;c2183086-e8b3-4df9-bb10-a75bfcb92ef8&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;375978b4580458ab42f1716d419f0aff&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/register&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/register&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123\&quot;,\r\n  \&quot;address\&quot; : \&quot;梅州市五华\&quot;,\r\n  \&quot;gender\&quot; : 1,\r\n  \&quot;phone\&quot; : \&quot;14754319999\&quot;,\r\n  \&quot;cardId\&quot; : \&quot;4414249900\&quot;,\r\n  \&quot;name\&quot; : \&quot;李明\&quot;,\r\n  \&quot;username\&quot; : \&quot;小明\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,58,42,482770800],&quot;historyId&quot;:&quot;e32d6115-ac4e-48f1-a9a9-225bad566776&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;375978b4580458ab42f1716d419f0aff&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/register&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/register&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123\&quot;,\r\n  \&quot;address\&quot; : \&quot;梅州市五华\&quot;,\r\n  \&quot;gender\&quot; : 1,\r\n  \&quot;phone\&quot; : \&quot;14754319999\&quot;,\r\n  \&quot;cardId\&quot; : \&quot;4414249900\&quot;,\r\n  \&quot;name\&quot; : \&quot;李明\&quot;,\r\n  \&quot;username\&quot; : \&quot;小明\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,58,23,935061100],&quot;historyId&quot;:&quot;432d599e-4e4e-4fc9-85ce-e1967d23c30f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;375978b4580458ab42f1716d419f0aff&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/register&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/register&quot;,&quot;requestBody&quot;:&quot;{\r\n    \&quot;password\&quot; : \&quot;123\&quot;,\r\n    \&quot;address\&quot; : \&quot;梅州市五华\&quot;,\r\n    \&quot;gender\&quot; : 1,\r\n    \&quot;phone\&quot; : \&quot;14754319999\&quot;,\r\n    \&quot;cardId\&quot; : \&quot;4414249900\&quot;,\r\n    \&quot;name\&quot; : \&quot;李明\&quot;,\r\n    \&quot;username\&quot; : \&quot;小明\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,55,45,210230000],&quot;historyId&quot;:&quot;40018f64-77cb-4fea-8403-583df3668bfc&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;375978b4580458ab42f1716d419f0aff&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/register&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/register&quot;,&quot;requestBody&quot;:&quot;{\r\n    \&quot;lastLogin\&quot; : \&quot;2025-02-24 16:49:31\&quot;,\r\n    \&quot;image\&quot; : \&quot;\&quot;,\r\n    \&quot;password\&quot; : \&quot;123\&quot;,\r\n    \&quot;address\&quot; : \&quot;梅州市五华\&quot;,\r\n    \&quot;gender\&quot; : 1,\r\n    \&quot;phone\&quot; : \&quot;14754319999\&quot;,\r\n    \&quot;cardId\&quot; : \&quot;4414249900\&quot;,\r\n    \&quot;name\&quot; : \&quot;李明\&quot;,\r\n    \&quot;username\&quot; : \&quot;小明\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,55,7,640062700],&quot;historyId&quot;:&quot;9da603e1-4611-4eb0-bea0-97173aa5916a&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;375978b4580458ab42f1716d419f0aff&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/register&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/register&quot;,&quot;requestBody&quot;:&quot;{\r\n    \&quot;lastLogin\&quot; : \&quot;2025-02-24 16:49:31\&quot;,\r\n    \&quot;image\&quot; : \&quot;\&quot;,\r\n    \&quot;password\&quot; : \&quot;123\&quot;,\r\n    \&quot;address\&quot; : \&quot;梅州市五华\&quot;,\r\n    \&quot;gender\&quot; : 1,\r\n    \&quot;phone\&quot; : \&quot;14754319999\&quot;,\r\n    \&quot;cardId\&quot; : \&quot;4414249900\&quot;,\r\n    \&quot;name\&quot; : \&quot;李明\&quot;,\r\n    \&quot;username\&quot; : \&quot;小明\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,54,44,962978000],&quot;historyId&quot;:&quot;35d6a3e6-5c04-4204-8135-31641cedb03b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;375978b4580458ab42f1716d419f0aff&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/register&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/register&quot;,&quot;requestBody&quot;:&quot;{\r\n    \&quot;lastLogin\&quot; : \&quot;2025-02-24 16:49:31\&quot;,\r\n    \&quot;image\&quot; : \&quot;\&quot;,\r\n    \&quot;password\&quot; : \&quot;123\&quot;,\r\n    \&quot;address\&quot; : \&quot;梅州市五华\&quot;,\r\n    \&quot;gender\&quot; : 1,\r\n    \&quot;phone\&quot; : \&quot;14754319999\&quot;,\r\n    \&quot;cardId\&quot; : \&quot;4414249900\&quot;,\r\n    \&quot;name\&quot; : \&quot;李明\&quot;,\r\n    \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,54,31,588051200],&quot;historyId&quot;:&quot;9001975a-b16f-4fcd-9741-cf895cbf5013&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;298f6015c6327686e6e46c9f505db70f&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/user/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.UserController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/user/login&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[{&quot;key&quot;:&quot;username&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;password&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,33,39,442975500],&quot;historyId&quot;:&quot;c56ab516-8676-46e4-902e-2bcbfa06d3eb&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;172c0191c9b6be8a70e5866bd9643735&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,15,38,613557000],&quot;historyId&quot;:&quot;2eb00976-0504-4084-a94e-1a0780572f60&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;172c0191c9b6be8a70e5866bd9643735&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,14,34,189692200],&quot;historyId&quot;:&quot;50aac336-db6a-4cdb-958d-b76480a1c12c&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;172c0191c9b6be8a70e5866bd9643735&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,7,54,651732300],&quot;historyId&quot;:&quot;ddba1e36-b1d6-4e92-819e-538beaecc74b&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;172c0191c9b6be8a70e5866bd9643735&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,3,57,585467800],&quot;historyId&quot;:&quot;6b39fc56-3c41-4499-b13f-3bb907b23d2d&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;2a49d01a92edd9f8843cd720f2a375e4&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123\&quot;,\r\n  \&quot;username\&quot; : \&quot;admin\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,16,2,29,137843700],&quot;historyId&quot;:&quot;76a32f8b-3b0a-4e8c-af52-be61841d74f1&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;2a49d01a92edd9f8843cd720f2a375e4&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123\&quot;,\r\n  \&quot;username\&quot; : \&quot;admin\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,15,58,35,82781900],&quot;historyId&quot;:&quot;27c5b40a-05d2-4eb4-aeca-9b9d8b31b899&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;2a49d01a92edd9f8843cd720f2a375e4&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;111\&quot;,\r\n  \&quot;username\&quot; : \&quot;222\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,15,58,26,360464900],&quot;historyId&quot;:&quot;90db87f2-ecee-4277-873b-506aea317d8e&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;2a49d01a92edd9f8843cd720f2a375e4&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.libraryserver.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,15,58,18,422601600],&quot;historyId&quot;:&quot;c48000c6-dcdb-4d19-9f6e-544236232b0f&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;8e05ea906a4691c3d88d7218b7a9a8a8&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,15,58,3,950722500],&quot;historyId&quot;:&quot;bcff3af8-c9a5-4b93-aa04-ba0e93e4b743&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;8e05ea906a4691c3d88d7218b7a9a8a8&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,15,58,2,981737000],&quot;historyId&quot;:&quot;07c0ef62-71db-4773-adbf-bb45d2a491dc&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;8e05ea906a4691c3d88d7218b7a9a8a8&quot;,&quot;moduleName&quot;:&quot;library-server&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/login&quot;,&quot;simpleClassName&quot;:&quot;zhijianhu.controller.LoginController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot; &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/users/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;\&quot;,\r\n  \&quot;username\&quot; : \&quot;\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,2,24,15,54,13,5294200],&quot;historyId&quot;:&quot;633b99ee-c912-4597-b0e2-d39f7fc4de51&quot;}]" />
  </component>
</project>